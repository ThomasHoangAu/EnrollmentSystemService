//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnrollmentSystemClient.EnrollmentServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enrollment", Namespace="http://schemas.datacontract.org/2004/07/EnrollmentSystemService")]
    [System.SerializableAttribute()]
    public partial class Enrollment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EnrollmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StudentIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseId {
            get {
                return this.CourseIdField;
            }
            set {
                if ((this.CourseIdField.Equals(value) != true)) {
                    this.CourseIdField = value;
                    this.RaisePropertyChanged("CourseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EnrollmentId {
            get {
                return this.EnrollmentIdField;
            }
            set {
                if ((this.EnrollmentIdField.Equals(value) != true)) {
                    this.EnrollmentIdField = value;
                    this.RaisePropertyChanged("EnrollmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudentId {
            get {
                return this.StudentIdField;
            }
            set {
                if ((this.StudentIdField.Equals(value) != true)) {
                    this.StudentIdField = value;
                    this.RaisePropertyChanged("StudentId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnrollmentServiceReference.IEnrollmentService")]
    public interface IEnrollmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/getEnrollments", ReplyAction="http://tempuri.org/IEnrollmentService/getEnrollmentsResponse")]
        EnrollmentSystemClient.EnrollmentServiceReference.Enrollment[] getEnrollments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/getEnrollments", ReplyAction="http://tempuri.org/IEnrollmentService/getEnrollmentsResponse")]
        System.Threading.Tasks.Task<EnrollmentSystemClient.EnrollmentServiceReference.Enrollment[]> getEnrollmentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/addEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/addEnrollmentResponse")]
        void addEnrollment(int studentId, int courseId, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/addEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/addEnrollmentResponse")]
        System.Threading.Tasks.Task addEnrollmentAsync(int studentId, int courseId, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/getAnEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/getAnEnrollmentResponse")]
        EnrollmentSystemClient.EnrollmentServiceReference.Enrollment getAnEnrollment(int enrollmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrollmentService/getAnEnrollment", ReplyAction="http://tempuri.org/IEnrollmentService/getAnEnrollmentResponse")]
        System.Threading.Tasks.Task<EnrollmentSystemClient.EnrollmentServiceReference.Enrollment> getAnEnrollmentAsync(int enrollmentId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnrollmentServiceChannel : EnrollmentSystemClient.EnrollmentServiceReference.IEnrollmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrollmentServiceClient : System.ServiceModel.ClientBase<EnrollmentSystemClient.EnrollmentServiceReference.IEnrollmentService>, EnrollmentSystemClient.EnrollmentServiceReference.IEnrollmentService {
        
        public EnrollmentServiceClient() {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrollmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EnrollmentSystemClient.EnrollmentServiceReference.Enrollment[] getEnrollments() {
            return base.Channel.getEnrollments();
        }
        
        public System.Threading.Tasks.Task<EnrollmentSystemClient.EnrollmentServiceReference.Enrollment[]> getEnrollmentsAsync() {
            return base.Channel.getEnrollmentsAsync();
        }
        
        public void addEnrollment(int studentId, int courseId, string grade) {
            base.Channel.addEnrollment(studentId, courseId, grade);
        }
        
        public System.Threading.Tasks.Task addEnrollmentAsync(int studentId, int courseId, string grade) {
            return base.Channel.addEnrollmentAsync(studentId, courseId, grade);
        }
        
        public EnrollmentSystemClient.EnrollmentServiceReference.Enrollment getAnEnrollment(int enrollmentId) {
            return base.Channel.getAnEnrollment(enrollmentId);
        }
        
        public System.Threading.Tasks.Task<EnrollmentSystemClient.EnrollmentServiceReference.Enrollment> getAnEnrollmentAsync(int enrollmentId) {
            return base.Channel.getAnEnrollmentAsync(enrollmentId);
        }
    }
}
